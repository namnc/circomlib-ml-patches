pragma circom 2.0.0;

include "./circomlib-matrix/matMul.circom";
include "utils-comp.circom";
// Dense layer
// Multiply a vector of shape nInputs with a weight matrix of shape nInputs * nOutputs, then add the result with a bias vector
template Dense (nInputs, nOutputs) {
    signal input in[nInputs];
    signal input weights[nInputs][nOutputs];
    signal input bias[nOutputs];
    signal output out[nOutputs];
    
    component dot[nOutputs];
	component shiftBase10[nOutputs];

    for (var i=0; i<nOutputs; i++) {
        dot[i] = matMul(1,nInputs,1);
        shiftBase10[i] = ShiftBase10();
		
        for (var j=0; j<nInputs; j++) {
            dot[i].a[0][j] <== in[j];
            dot[i].b[j][0] <== weights[j][i];
        }

		shiftBase10[i].in <== dot[i].out[0][0] + bias[i];
        out[i] <== shiftBase10[i].out;
    }
}